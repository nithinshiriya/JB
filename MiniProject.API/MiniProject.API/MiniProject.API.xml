<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MiniProject.API</name>
    </assembly>
    <members>
        <member name="M:MiniProject.API.Controllers.BooksController.GetAll">
            <summary>
            Get all books
            </summary>
            <returns></returns>
        </member>
        <member name="M:MiniProject.API.Controllers.BooksController.GetBook(System.Int32)">
            <summary>
            Get book by id
            </summary>
            <param name="bookid"></param>
            <returns></returns>
        </member>
        <member name="M:MiniProject.API.Controllers.BooksController.EditBook(System.Int32,MiniProject.API.Repository.Models.Book)">
            <summary>
            Edit book by id
            </summary>
            <param name="bookid"></param>
            <param name="book"></param>
            <returns></returns>
        </member>
        <member name="M:MiniProject.API.Controllers.BooksController.AddBook(MiniProject.API.Repository.Models.Book)">
            <summary>
            Add new book
            </summary>
            <returns></returns>
        </member>
        <member name="M:MiniProject.API.Controllers.BooksController.DeleteBook(System.Int32)">
            <summary>
            Delete book by id
            </summary>
            <param name="bookid"></param>
            <returns></returns>
        </member>
        <member name="T:MiniProject.API.Repository.BookRepository">
            <summary>
            Books repository. Provide all type of crud operation on table.
            </summary>
        </member>
        <member name="M:MiniProject.API.Repository.BookRepository.GetAllBooks">
            <summary>
            Get all books from Books table
            </summary>
            <returns></returns>
        </member>
        <member name="M:MiniProject.API.Repository.BookRepository.GetBook(System.Int32)">
            <summary>
            Get Book by id from the books table.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MiniProject.API.Repository.BookRepository.AddBook(MiniProject.API.Repository.Models.Book)">
            <summary>
            Add book to the books table.
            </summary>
            <param name="book"></param>
            <returns></returns>
        </member>
        <member name="M:MiniProject.API.Repository.BookRepository.UpdateBook(MiniProject.API.Repository.Models.Book)">
            <summary>
            Modify or update existing book to books table.
            </summary>
            <param name="book"></param>
            <returns></returns>
        </member>
        <member name="M:MiniProject.API.Repository.BookRepository.DeleteBook(System.Int32)">
            <summary>
            Delete book from the books table.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:MiniProject.API.Repository.RepositoryContext">
            <summary>
            Database repository context.
            </summary>
        </member>
        <member name="P:MiniProject.API.Repository.RepositoryContext.Books">
            <summary>
            Books table
            </summary>
        </member>
        <member name="T:MiniProject.API.Services.BookService">
            <summary>
            Book Service class. Provides all CRUD operation support.
            </summary>
        </member>
        <member name="M:MiniProject.API.Services.BookService.GetAllBooks">
            <summary>
            Get All books
            </summary>
            <returns></returns>
        </member>
        <member name="M:MiniProject.API.Services.BookService.GetBookById(System.Int32)">
            <summary>
            Get Book by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MiniProject.API.Services.BookService.GetFileBase64(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Get Base64 string formfile.
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:MiniProject.API.Services.BookService.AddBook(MiniProject.API.Repository.Models.Book)">
            <summary>
            Add new book to the books
            </summary>
            <param name="book"></param>
            <returns></returns>
        </member>
        <member name="M:MiniProject.API.Services.BookService.UpdateBook(System.Int32,MiniProject.API.Repository.Models.Book)">
            <summary>
            Modify existing books
            </summary>
            <param name="id"></param>
            <param name="book"></param>
            <returns></returns>
        </member>
        <member name="M:MiniProject.API.Services.BookService.DeleteBook(System.Int32)">
            <summary>
            Delete book
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MiniProject.API.Services.BookService.UploadCoverPage(System.Int32,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Update cover page image
            </summary>
            <param name="id"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
    </members>
</doc>
